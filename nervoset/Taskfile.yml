version: '3'

set: [pipefail]

includes:
  base_vars: .task/base.vars.yml
  common: .task/common.yml

  docker_jarvis:
    taskfile: .task/docker.yml
    requires:
      vars:
        - INFRA #'dev' or 'prod'
    vars:
      APP_NAME: 'jarvis'
      K8S_APP_NAME: 'jarvis'
      VERSION: '{{.APP_VERSION}}'
      IMAGE_NAME:
        sh: task img_name K8S_APP_NAME={{.K8S_APP_NAME}} INFRA={{.INFRA}}

  docker_groot:
    taskfile: .task/docker.yml
    requires:
      vars:
        - INFRA #'dev' or 'prod'
    vars:
      APP_NAME: 'groot'
      K8S_APP_NAME: 'groot'
      VERSION: '{{.APP_VERSION}}'
      IMAGE_NAME:
        sh: task img_name K8S_APP_NAME={{.K8S_APP_NAME}} INFRA={{.INFRA}}

  docker_nervo-migrant:
    taskfile: .task/docker.yml
    requires:
      vars:
        - INFRA #'dev' or 'prod'
    vars:
      APP_NAME: 'nervo-migrant'
      K8S_APP_NAME: 'nervo-migrant'
      VERSION: '{{.APP_VERSION}}'
      IMAGE_NAME:
        sh: task img_name K8S_APP_NAME={{.K8S_APP_NAME}} INFRA={{.INFRA}}

  docker_nervo_server:
    taskfile: .task/docker.yml
    requires:
      vars:
        - INFRA #'dev' or 'prod'
    vars:
      APP_NAME: 'nervo_server'
      K8S_APP_NAME: "nervo-server"
      VERSION: '{{.APP_VERSION}}'
      HOST_PORT: '3000'
      DOCKER_PORT: '3000'
      IMAGE_NAME:
        sh: task img_name K8S_APP_NAME={{.K8S_APP_NAME}} INFRA={{.INFRA}}

tasks:
  default:
    cmds:
      - task --list-all

  img_name:
    requires:
      vars:
        - REGISTRY
        - REPOSITORY
        - K8S_APP_NAME
        - APP_VERSION
        - INFRA
    vars:
      IMG_NAME_PREFIX: '{{.REGISTRY}}/{{.REPOSITORY}}/{{.K8S_APP_NAME}}'
      IMG_NAME_PROD: '{{.IMG_NAME_PREFIX}}_v{{.APP_VERSION}}'
      IMG_NAME_DEV: '{{.IMG_NAME_PREFIX}}_${USER}_dev_v{{.APP_VERSION}}'
    cmds:
      - echo {{if eq .INFRA "prod"}}{{.IMG_NAME_PROD}}{{else}}{{.IMG_NAME_DEV}}{{end}}

  build_nervo_web_component:
    requires:
      vars:
        - AGENT_TYPE
    vars:
      NERVO_WASM_DIR: 'app/nervo_wasm'
      NERVO_WEB_DIR: 'nervo-web'
    cmds:
      - cd {{.NERVO_WASM_DIR}} && wasm-pack build

      - rm -rf {{.NERVO_WEB_DIR}}/pkg
      - rm -rf {{.NERVO_WEB_DIR}}/dist

      - mkdir -p {{.NERVO_WEB_DIR}}/pkg
      - cp -r {{.NERVO_WASM_DIR}}/pkg {{.NERVO_WEB_DIR}}
      - "cd {{.NERVO_WEB_DIR}} && npm install && VITE_AGENT_TYPE={{.AGENT_TYPE}} npm run build:lib"

  nervo_web_build:
    requires:
      vars:
        - AGENT_TYPE
    vars:
      NERVO_WASM_DIR: 'app/nervo_wasm'
      NERVO_WEB_DIR: 'nervo-web'
      PWD:
        sh: pwd
      UID:
        sh: id -u
      GID:
        sh: id -g
    cmds:
      - rm -rf {{.NERVO_WEB_DIR}}/pkg
      - rm -rf {{.NERVO_WEB_DIR}}/dist
      - mkdir {{.NERVO_WEB_DIR}}/pkg

      - task: common:base_build

      - |
        docker run --rm \
          -v {{.PWD}}/{{.NERVO_WEB_DIR}}/pkg:/nervoset/app/nervo_wasm/pkg \
          --workdir /nervoset/app/nervo_wasm \
          {{.BASE_IMAGE}} \
          bash -c "chown -R {{.UID}}:{{.GID}} /nervoset/app/nervo_wasm/pkg && wasm-pack build"

      - "cd {{.NERVO_WEB_DIR}} && npm install && VITE_AGENT_TYPE={{.AGENT_TYPE}} npm run build:app"

  nervo_web_run:
    requires:
      vars:
        - SERVER_PORT
        - AGENT_TYPE
    cmds:
      - task: nervo_web_build
      - "cd nervo-web && VITE_SERVER_PORT={{.SERVER_PORT}} VITE_AGENT_TYPE={{.AGENT_TYPE}} npm run local"

  nervo_web_run_dev:
    requires:
      vars:
        - SERVER_PORT
        - AGENT_TYPE
    cmds:
      - task: nervo_web_build
      - "cd nervo-web && VITE_SERVER_PORT={{.SERVER_PORT}} VITE_AGENT_TYPE={{.AGENT_TYPE}} npm run dev"

  test:
    cmds:
      - task: common:base_build
      - docker run --rm {{.BASE_IMAGE}} cargo test --release

  docker_push:
    requires:
      vars:
        - INFRA #'dev' or 'prod'
    cmds:
      - task: docker_groot:push
      - task: docker_jarvis:push
      - task: docker_nervo_server:push
      - task: docker_nervo-migrant:push
