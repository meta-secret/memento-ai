version: '3'

includes:
  k3d_prod:
    taskfile: k3d/Taskfile.yml
    dir: k3d
    vars:
      INFRA: "prod"
      K3D_CONFIG: "k3d.prod.yaml"
      K3D_HTTP_PORT: 80
      K3D_HTTPS_PORT: 443
      CLUSTER_NAME:
        sh: "echo $(whoami)-nervoset-{{.INFRA}}"

  k3d_dev:
    taskfile: k3d/Taskfile.yml
    dir: k3d
    vars:
      INFRA: 'dev'
      K3D_CONFIG: "k3d.dev.yaml"
      K3D_HTTP_PORT:
        sh: shuf -i 8000-9000 -n 1 # random port between 8000 and 9000
      K3D_HTTPS_PORT:
        sh: shuf -i 9000-10000 -n 1 # random port between 9000 and 10000
      CLUSTER_NAME:
        sh: "echo $(whoami)-nervoset-{{.INFRA}}"

  docker_registry:
    taskfile: docker-registry/Taskfile.yml

  db: db/Taskfile.yml

tasks:
  default:
    cmds:
      - task --list-all

  redeploy_infra_dev:
    vars:
      INFRA: 'dev'
      K8S_CLUSTER_NAME:
        sh: "echo $(whoami)-nervoset-{{.INFRA}}"
    cmds:
      - k3d cluster delete {{.K8S_CLUSTER_NAME}}
      - task: infra_dev
        vars:
          INFRA: "{{.INFRA}}"

  infra_dev:
    vars:
      INFRA: 'dev'
      USER:
        sh: echo ${USER}
    cmds:
      - task: infra
        vars:
          INFRA: "{{.INFRA}}"

  infra_dev_with_user:
    requires:
      vars:
        - USER
    vars:
      INFRA: 'dev'
    cmds:
      - task: infra
        vars:
          INFRA: "{{.INFRA}}"
          USER: "{{.USER}}"

  infra_prod:
    vars:
      INFRA: 'prod'
    cmds:
      - task: infra
        vars:
          INFRA: "{{.INFRA}}"

  # k3d installation has to be done outside of this task
  infra:
    internal: true
    requires:
      vars:
        - INFRA
    vars:
      K8S_CLUSTER_NAME:
        sh: "echo $(whoami)-nervoset-{{.INFRA}}"
    cmds:
      # deploy k8s cluster with k3d
      - task: "k3d_{{.INFRA}}:k8s_deploy"
        vars:
          CLUSTER_NAME: '{{.K8S_CLUSTER_NAME}}'

      # setup persistent volume for k8s
      #- kubectl apply -f kube

      # setup docker registry authentication in k8s
      - task: docker_registry:setup_docker_registry
        vars:
          USER: '{{.USER}}'

      # deploy qdrant
      - task: db:vector_db:qdrant_deploy
        vars:
          USER: '{{.USER}}'

      # deploy migrant
      - task -t {{.ROOT_DIR}}/Taskfile.yml infra:k8s:nervo_migrant:redeploy_job USER={{.USER}} INFRA={{.INFRA}}

  k3d_within_docker:
    cmds:
      - |-
        docker run -it --rm \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v /usr/bin/docker:/usr/bin/docker \
          -v /usr/local/bin/k3d:/usr/local/bin/k3d \
          ghcr.io/k3d-io/k3d:5.7.3 \
          cluster create kek
